3.2.1 List six relational operators.
>, <, <=, >=, ==, !=

3.2.2 Assuming x is 1, show the result of the following Boolean expressions:
(x > 0) true
(x < 0) false
(x != 0) true
(x >= 0) true
(x != 1) false

3.2.3 Can the following conversions involving casting be allowed? Write a test program
to verify it.
boolean b = true;
i = (int)b;
int i = 1;
boolean b = (boolean)i;

no, boolean values can't be cast to other types


3.3.1 Write an if statement that assigns 1 to x if y is greater than 0.
if (y > 0) {x = 1}

3.3.2 Write an if statement that increases pay by 3% if score is greater than 90.
if (score > 90) {pay *= 1.03%}

3.3.3 What is wrong in the following code?
if radius >= 0
{
 area = radius * radius * PI;
 System.out.println("The area for the circle of " +
 " radius " + radius + " is " + area);
}

no enclosing braces around the if statement


3.4.1 Write an if statement that increases pay by 3% if score is greater than 90, otherwise increases pay by 1%.
if (score > 90) {
pay *= 1.03
} else {
pay * 1.01
}

3.4.2 What is the output of the code in (a) and (b) if number is 30? What if number is 35?
a) if number is 30 --> 30 is even, 30 is odd.
b) if number is 30 --> 30 is even
a) if number is 35 --> 35 is odd.
b) if number is 35 --> 35 is odd.


3.5.1 Suppose x = 3 and y = 2; show the output, if any, of the following code. What
is the output if x = 3 and y = 4? What is the output if x = 2 and y = 2? Draw
a flowchart of the code.
if (x > 2) {
 if (y > 2) {
 z = x + y;
 System.out.println("z is " + z);
 }
}
else
 System.out.println("x is " + x);

  when x = 3 and y = 2 --> no output
  when x = 3 and y = 4 --> z is 7
  when x = 2 and y =2 --> x is 2

3.5.2 Suppose x = 2 and y = 3. Show the output, if any, of the following code. What is
the output if x = 3 and y = 2? What is the output if x = 3 and y = 3?
if (x > 2)
 if (y > 2) {
 int z = x + y;
 System.out.println("z is " + z);
 }
else
 System.out.println("x is " + x);

  when x = 2 and y = 3-->  no output
  when x = 3 and y = 2 --> x is 3
  when x = 3 and y =3 --> z is 6

3.5.3 What is wrong in the following code?
if (score >= 60)
 System.out.println("D");
else if (score >= 70)
 System.out.println("C");
else if (score >= 80)
 System.out.println("B");
else if (score >= 90)
 System.out.println("A");
else
 System.out.println("F");

 it will return d, even if the score is 90 because the if statement terminates when the condition comes out as true.


 3.6.1 Which of the following statements are equivalent? Which ones are correctly indented?
a, c, and d are the same. (B) and (C) are correctly indented.


3.6.2 Rewrite the following statement using a Boolean expression:
if (count % 10 == 0)
 newLine = true;
else
 newLine = false;

 newLine = (count % 10 == 0);


 3.6.3 Are the following statements correct? Which one is better?
 both are correct. b is better because don't need to evaluate both statements


 3.6.4 What is the output of the following code if number is 14, 15, or 30?
 a)
 14 --> 14 is even
 15 --> 15 is a multiple of 5
 30 --> 30 is even; 30 is a multiple of 5

 b)
 14 --> 14 is even
 15 --> 15 is a multiple of 5
 30 --> 30 is even


3.7.1 Which of the following is a possible output from invoking Math.random()?
0.5, 0.0, 0.234


3.7.2 a. How do you generate a random integer i such that 0 <= i < 20?
(int) Math.random() * 20;

b. How do you generate a random integer i such that 10 <= i < 20?
(int) (Math.random() * 10 ) + 10;

c. How do you generate a random integer i such that 10 <= i <= 50?
(int) (Math.random() * 41) + 10;

d. Write an expression that returns 0 or 1 randomly
(int) (Math.random() * 2);

3.9.1 Are the following two statements equivalent?
yes

3.10.1 Assuming that x is 1, show the result of the following Boolean expressions:
 (true) && (3 > 4) --> false
 !(x > 0) && (x > 0) --> false
 (x > 0) || (x < 0) --> true
 (x != 0) || (x == 0) --> true
 (x >= 0) || (x < 0) --> true
 (x != 1) == !(x == 1) --> true


3.10.2 (a) Write a Boolean expression that evaluates to true if a number stored in variable num is between 1 and 100. (b) Write a Boolean expression that evaluates to
true if a number stored in variable num is between 1 and 100 or the number is
negative.

a) num >= 1 && num <= 100
b) (num >= 1 && num <= 100) || num < 0

3.10.3

3.10.4 x /= y

3.10.6 What is the value of the expression x >= 50 && x <= 100 if x is 45, 67, or 101?
false, true, false

3.10.7
true
true
false
true
false

3.10.8 Write a Boolean expression that evaluates to true if age is greater than 13 and less than 18.
age > 13 && age < 18

3.10.9 Write a Boolean expression that evaluates to true if weight is greater than 50
pounds or height is greater than 60 inches.

weight > 50 || height > 60

3.10.10 Write a Boolean expression that evaluates to true if weight is greater than 50
pounds and height is greater than 60 inches.

weight > 50 && height > 60

3.10.11 Write a Boolean expression that evaluates to true if either weight is greater than
50 pounds or height is greater than 60 inches, but not both.

weight > 50 ^ height > 60


3.11.1 How many days in the February of a leap year? Which of the following is a leap
year? 500, 1000, 2000, 2016, and 2020?
29
2000, 2016 and 2020 are leap years


3.12.1 What happens if you enter an integer as 05?
same as entering 5

3.13.1 What data types are required for a switch variable? If the keyword break is not
used after a case is processed, what is the next statement to be executed? Can you
convert a switch statement to an equivalent if statement, or vice versa? What are
the advantages of using a switch statement?

char, String, byte, short, int
if no break, the next case in the switch statement will be processed.
yes, you can convert a switch statement to an if statement, but not an if statement to a switch statement
advantage of switch statement - easier to read


3.13.2 What is y after the following switch statement is executed? Rewrite the code
using an if-else statement.
x = 3; y = 3;
switch (x + 3) {
 case 6: y = 1;
 default: y += 1;
}

y = 1;

if (x + 3 == 6) {
y = 1;
} else {
y +=1;
}



3.13.3 What is x after the following if-else statement is executed? Use a switch statement to rewrite it and draw the flowchart for the new switch statement.
int x = 1, a = 3;
if (a == 1)
 x += 5;
else if (a == 2)
 x += 10;
else if (a == 3)
 x += 16;
else if (a == 4)
 x += 34;

 x = 17

 switch (a) {
 case 1: x+=5; break;
 case 2: x+=1-; break;
 case 3: x+=15; break;
 case 4: x+=34; break;
 }

3.13.4 Write a switch statement that displays Sunday, Monday, Tuesday, Wednesday,
Thursday, Friday, Saturday, if day is 0, 1, 2, 3, 4, 5, 6, respectively.


 switch (day) {
 case 0: Sunday; break;
 case 1: Monday; break;
 case 2: Tuesday; break;
 case 3: Wednesday; break;
 case 4: Thursday; break;
 case 5: Friday; break;
 case 6: Saturday; break;
 }

3.13.5 Rewrite Listing 3.9 using an if-else statement.

int remainder = year % 12;

if (remainder == 0) {
System.out.println("monkey");
} else if (remainder == 1) {
 System.out.println("rooster");
}      etc

3.14.1 Suppose when you run the following program, you enter the input 2 3 6 from the
console. What is the output?
sorted

3.14.2 Rewrite the following if statements using the conditional operator
ticketPrice = ages >= 16 ? 20 : 10;


3.14.3 Rewrite the following codes using if-else statements.
a. score = (x > 10)? 3 * scale: 4 * scale;
if (x > 10) {
score = 3 * scale
} else {
score = 4* scale;
}

b. tax = (income > 10000)? income * 0.2: income * 0.17 + 1000;
if (income > 10000) {
tax = income * 0.2
} else {
tax = income * 0.17 + income
}

c. System.out.println((number % 3 == 0)? i: j);
if (number % 3 ==0) {
System.out.println(i)
} else {
System.out.println(j)
}


3.14.4 Write an expression using a conditional operator that returns randomly −1 or 1.
(int)(Math.random() * 2) == 0 ? -1 : 1;

3.15.1 List the precedence order of the Boolean operators. Evaluate the following expressions:
in decreasing order: ||, &&, ^, !

true || true && false --> true
true && true || false  --> true


3.15.2 True or false? All the binary operators except = are left associative. --> true

3.15.3 Evaluate the following expressions:
2 * 2 – 3 > 2 && 4 – 2 > 5 --> false
2 * 2 – 3 > 2 || 4 – 2 > 5 --> false

3.15.4
Is (x > 0 && x < 10) the same as ((x > 0) && (x < 10))? yes
Is (x > 0 || x < 10) the same as ((x > 0) || (x < 10))? yes
Is (x > 0 || x < 10) && y < 0 the same as (x > 0 ||
 (x < 10 && y < 0))?  yes

